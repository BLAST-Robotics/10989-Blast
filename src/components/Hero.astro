---

import carouselData from '../data/hero-carousel.json';
---

<section id="home" class="hero min-h-screen bg-top relative overflow-hidden">
    <div id="carousel-bg" class="absolute inset-0 w-full h-full z-0" style={`--slides: ${carouselData.length}; --slide-interval: 5s;`}>
        {carouselData.map((slide, idx) => (
            <div
                class={`hero-slide absolute inset-0 w-full h-full ${idx === 0 ? 'opacity-100' : 'opacity-0'} pointer-events-none`}
                aria-hidden={idx !== 0}
                style={`--i:${idx}; will-change: opacity; background-image: linear-gradient(${slide.overlay}, ${slide.overlay}), url('${slide.image}'); background-size: cover; background-position: center; filter: ${slide.filter || 'none'};`}
            >
                <span class="sr-only">{slide.alt}</span>
            </div>
        ))}
    </div>
    <div class="hero-content text-center px-4 relative z-10">
        <div class="max-w-4xl">
            <!--<div class="mb-6 md:mb-8">
                <img
                    src="/new_logo_black.png"
                    alt="Blast Robotics Cool Logo"
                    class="mx-auto h-20 rounded-2xl w-20 sm:h-24 sm:w-24 md:h-32 md:w-32 mb-4 md:mb-6"
                    loading="lazy"
                />
            </div>-->
            <h1
                class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold mb-4 md:mb-6 text-white drop-shadow-lg">
                Welcome to Blast Robotics
            </h1>
            <p
                class="text-lg sm:text-xl md:text-2xl mb-6 md:mb-8 text-white/90 drop-shadow-md px-4">
                FRC Community Team serving Mainline Pennsylvania
            </p>
            <div
                class="flex flex-col sm:flex-row gap-3 md:gap-4 justify-center">
                <a
                    href="#contact"
                    class="btn btn-primary btn-sm sm:btn-md lg:btn-lg"
                    >Join Our Team</a
                >
                <a
                    href="#features"
                    class="btn btn-outline btn-sm sm:btn-md lg:btn-lg text-white dark:text-white border-white dark:border-white"
                    >Learn More</a
                >
            </div>
            <!-- Feature badges -->
            <div
                class="flex flex-wrap justify-center gap-2 sm:gap-3 md:gap-4 mt-8 md:mt-12">
                <div
                    class="badge badge-primary badge-sm sm:badge-md lg:badge-lg p-2 sm:p-3 lg:p-4">
                    <i
                        class="bi bi-lightbulb mr-1 sm:mr-2 text-sm sm:text-base lg:text-lg"
                    ></i>
                    <span class="text-xs sm:text-sm lg:text-base"
                        >Innovation</span
                    >
                </div>
                <div
                    class="badge badge-secondary badge-sm sm:badge-md lg:badge-lg p-2 sm:p-3 lg:p-4">
                    <i
                        class="bi bi-people mr-1 sm:mr-2 text-sm sm:text-base lg:text-lg"
                    ></i>
                    <span class="text-xs sm:text-sm lg:text-base">Teamwork</span
                    >
                </div>
                <div
                    class="badge badge-accent badge-sm sm:badge-md lg:badge-lg p-2 sm:p-3 lg:p-4">
                    <i
                        class="bi bi-trophy mr-1 sm:mr-2 text-sm sm:text-base lg:text-lg"
                    ></i>
                    <span class="text-xs sm:text-sm lg:text-base"
                        >Excellence</span
                    >
                </div>
            </div>
        </div>
    </div>
    <script type="module">
      // Minimal toggler: cycles pre-rendered slides and ensures no blank gaps
      window.addEventListener('DOMContentLoaded', () => {
        const slides = Array.from(document.querySelectorAll('#carousel-bg .hero-slide'));
        if (!slides.length) return;
        const interval = 5000; // ms per slide â€” keep in sync with your earlier setting
        let current = 0;
        // Ensure initial classes
        slides.forEach((s, i) => {
          s.classList.remove('opacity-100', 'opacity-0', 'pointer-events-none');
          if (i === 0) s.classList.add('opacity-100'); else s.classList.add('opacity-0', 'pointer-events-none');
          s.style.transition = 'opacity 1s ease-in-out';
        });
        setInterval(() => {
          const next = (current + 1) % slides.length;
          slides[current].classList.remove('opacity-100');
          slides[current].classList.add('opacity-0', 'pointer-events-none');
          slides[current].setAttribute('aria-hidden', 'true');

          slides[next].classList.remove('opacity-0', 'pointer-events-none');
          slides[next].classList.add('opacity-100');
          slides[next].setAttribute('aria-hidden', 'false');

          current = next;
        }, interval);
      });
    </script>
</section>
